name: Deploy Terraform (apply)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    permissions:
      contents: read
      security-events: write

    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_API1 }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Python & Checkov (loads custom policies from ./Checkov)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Set up Node.js
        if: success()
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov

      # Terraform CLI (disable wrapper to avoid Node dependency on self-hosted)
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false # self-hosted: no node needed

      # === Your local one-liner, translated to steps ===
      - name: Terraform Plan to JSON
        shell: bash
        run: |
          terraform -chdir=Landing-Zone init
          terraform -chdir=Landing-Zone plan -out tf.plan
          terraform -chdir=Landing-Zone show -json tf.plan > Landing-Zone/tf.json
          ls -lh Landing-Zone/tf.plan Landing-Zone/tf.json

      # Optional but helpful: fail early if tf.json is empty/bad
      - name: Validate tf.json
        shell: bash
        run: |
          if [ ! -s Landing-Zone/tf.json ]; then
            echo "Error: Landing-Zone/tf.json is empty or missing!" >&2
            exit 1
          fi
          head -20 Landing-Zone/tf.json

      - name: Run Checkov on plan (custom policies, SARIF)
        shell: bash
        run: |
          checkov \
            -f Landing-Zone/tf.json \
            --external-checks-dir Checkov \
            --skip-check 'CKV*' \
            -o cli -o sarif \
            --output-file-path console,./checkov.sarif
      - name: Upload SARIF to GitHub Code Scanning
        if: always() && hashFiles('./checkov.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./checkov.sarif

      # Apply only if everything (incl. Checkov) succeeded
      - name: Terraform Apply
        if: success()
        working-directory: Landing-Zone
        run: terraform apply -auto-approve

      - name: Cleanup secrets (best-effort)
        if: always()
        shell: bash
        run: |
          echo "TF_TOKEN_app_terraform_io=" >> "$GITHUB_ENV"
          unset TF_TOKEN_app_terraform_io || true
          rm -f "$HOME/.terraformrc" "$HOME/.terraform.d/credentials.tfrc.json" || true
          rm -rf "${GITHUB_WORKSPACE}/Landing-Zone/.terraform" \
                 "${GITHUB_WORKSPACE}/Landing-Zone/.terraform.lock.hcl" || true
