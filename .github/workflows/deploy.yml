name: Deploy Terraform (apply)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    # Needed to upload SARIF to Code scanning
    permissions:
      contents: read
      security-events: write

    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_API1 }} # Terraform Cloud API token stored in GitHub Secrets

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Install Python & Checkov so we can load your custom policies from ./Checkov
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov
      
      - name: Set up Node.js
        if: success()
        uses: actions/setup-node@v4
        with:
          node-version: '18'      
          # Set up Terraform CLI
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      # Create Terraform plan JSON (in Landing-Zone)
      - name: Terraform Plan to JSON
        working-directory: Landing-Zone
        shell: bash
        run: |
          terraform init
          terraform plan -out tf.plan
          terraform show -json tf.plan > tf.json

      # Run Checkov on the plan JSON (custom policies, skip built-ins)
      # This step FAILS the job on findings (no --soft-fail).
      - name: Run Checkov on plan (custom policies, SARIF)
        shell: bash
        run: |
          checkov \
            -f Landing-Zone/tf.json \
            --external-checks-dir Checkov \
            --skip-check 'CKV*' \
            -o cli -o sarif \
            --output-file-path console,./checkov.sarif

      # Always upload SARIF, even if Checkov failed
      - name: Upload SARIF to GitHub Code Scanning
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./checkov.sarif

      # Continue with Terraform only if all previous steps (incl. Checkov) succeeded
      - name: Set up Node.js
        if: success()
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Terraform Apply
        if: success()
        working-directory: Landing-Zone
        run: terraform apply -auto-approve

      - name: Cleanup secrets (best-effort)
        if: always()
        shell: bash
        run: |
          echo "TF_TOKEN_app_terraform_io=" >> "$GITHUB_ENV"
          unset TF_TOKEN_app_terraform_io || true
          rm -f "$HOME/.terraformrc" "$HOME/.terraform.d/credentials.tfrc.json" || true
          rm -rf "${GITHUB_WORKSPACE}/Landing-Zone/.terraform" \
                 "${GITHUB_WORKSPACE}/Landing-Zone/.terraform.lock.hcl" || true
