name: Deploy Terraform (apply)


on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    # Needed to upload SARIF to Code scanning
    permissions:
      contents: read
      security-events: write

    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_API1 }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      # Install Python & Checkov so we can load your custom policies from ./Checkov
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov

      # Run Checkov BEFORE any terraform apply. This will fail the job on findings.

      - name: Run Checkov (with custom policies in ./Checkov)
        shell: bash
        run: |
          # Scan only Terraform code, download modules, emit CLI + SARIF
          checkov \
            -d Landing-Zone \
            --framework terraform \
            --download-external-modules true \
            --external-checks-dir Checkov \
            --skip-check 'CKV*' \
            -o cli -o sarif \
            --output-file-path console,./checkov.sarif

        # If Checkov fails, we'll still upload SARIF (next step), but we won't proceed to apply.

      - name: Upload SARIF to GitHub Code Scanning
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./checkov.sarif

      # Continue with Terraform only if Checkov passed
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: Landing-Zone
        run: terraform init

      - name: Terraform Apply
        working-directory: Landing-Zone
        run: terraform apply -auto-approve

      - name: Cleanup secrets (best-effort)
        if: always()
        shell: bash
        run: |
          # Overwrite for subsequent steps in this job
          echo "TF_TOKEN_app_terraform_io=" >> "$GITHUB_ENV"
          unset TF_TOKEN_app_terraform_io || true
          # Remove any TF CLI creds file if a previous action created one
          rm -f "$HOME/.terraformrc" "$HOME/.terraform.d/credentials.tfrc.json" || true
          # Clean local TF artifacts from workspace
          rm -rf "${GITHUB_WORKSPACE}/Landing-Zone/.terraform" \
                 "${GITHUB_WORKSPACE}/Landing-Zone/.terraform.lock.hcl" || true
